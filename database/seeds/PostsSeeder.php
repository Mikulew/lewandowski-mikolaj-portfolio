<?php

use Illuminate\Database\Seeder;
use App\Post;

class PostsSeeder extends Seeder
{
    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {
        
        $post = new Post();
        $post->title = "23 marca - premiera portfolio";
        $post->content = "Od lutego intensywnie pracuję po godzinach nad portfolio jako projekt, który będę mógł pokazać podczas rozmowy kwalifikacyjnej na stanowisko junior front-endowca. Chciałem zrobić coś nietypowego i swojego, niż one page website - strona wizytówka, z prostą nawigacją, z sekcjami jak &bdquo;Cześć! jestem Mikołaj. Mam 26 lat. Interesuję się front-endem od ponad pół roku. Szukam pracy w tym zawodzie. HTML5 i CSS3 znam bardzo dobrze, a JavaScript na 40%.&rdquo; Od razu czułem, że nie chcę pokazywać światu tabelki z procentami o znajomości danej technologii, bo to jest relatywne i niewymierne. Wolę pokazać co zrobiłem w tej technologii, jakieś proste i nieskomplikowane aplikacje, który kod od razu można ujrzeć na GitHubie, albo jak działa w przeglądarce. Stąd pomysł na podkategorię &bdquo;gry i animacje&rdquo; z takimi nieskomplikowanymi projektami, które wykonuję często po godzinach. Większość początkujących front-endowców szukających pracy, robi formularz na samym końcu strony. Dlaczego nie zrobić jako osobną sekcję? Stąd decyzja, aby zbudować własną dynamiczną stronę zupełnie od zera. Bez pomocy Wordpressa czy z gotowymi szablonami z Internetu, czy z frameworkami CSS typu Bootstrap (fakt używam Semantic UI, ale 90% funkcjonalności używam w panelu administracyjnym i mam zamiar odejść od tego na tej stronie). Napisać coś własnego, od zera. Stąd liźnięcie wiedzy na temat back-endu, w tym wypadku ta strona jest oparta na PHP, na frameworku Laravel. Dzięki temu otworzyły mi się oczy i nowe możliwości np. jak wyglądają dynamiczne strony internetowe oraz komunikacja z serweram z bazą danych, przekierowania, wzorzec projektowy MVC. Na tej stronie sam jestem webdesignerem, front-endowcem i back-endowcem oraz copywriterem. Zmierzyłem się z tyloma problemami, które wcześniej nie miałem pojęcia, że istnieją. Jeszcze tyle mam do zrobienia, sporo niedoróbek, błędów, niedoskonałości, które chcę poprawić oraz nowe funkcjonalności, które chcę dodać. W końcu przychodzi czas, że się mówi &bdquo;dość&rdquo; i czas pokazać światu to co zrobiłem, pomimo iluzji przeciągania w nieskończoność, bo coś tam mam do poprawienia. Dlatego ustaliłem dzień 23 marca - (akurat to jest dzień przyjaźni polsko-węgierskiej) gdzie publikuje tę stronę do oceny. Będę poprawiał ją na bieżąco i jestem ciekaw opinii od bardziej doświadczonych programistów, dlatego jak chcesz mi pomóc, jak można efektywniej rozwiązać dany problem, możesz się ze mną skontaktować spokojnie na facebooku.";
        $post->slug =  str_slug($post->title);
        $post->save();
        
        $post = new Post();
        $post->title = "Rozwój bloga. Problemy i wizja.";
        $post->content = "Po skończeniu kursu miałem zrobić projekt. Postanowiłem zrobić własne portfolio. Pomysł z założeniem bloga pojawił się w lutym. Piszę bloga nabrało nowego znaczenia, bo w lutym pisałem bloga, ale nie jako bloger, ale jako programista, czyli pisałem swój własny system CMS (Content Management System, czypi po polsku System zarządzania treścią). Jak podaje wikipedia CMS to &bdquo;oprogramowanie pozwalające na łatwe utworzenie serwisu WWW oraz jego późniejszą aktualizację i rozbudowę przez redakcyjny personel nietechniczny. Kształtowanie treści i sposobu ich prezentacji w serwisie internetowym zarządzanym przez CMS odbywa się za pomocą prostych w obsłudze interfejsów użytkownika, zazwyczaj w postaci stron WWW zawierających rozbudowane formularze i moduły.&rdquo; Siedziałem nad panelem administracyjnym, że jak się zaloguję, to mogę wejść w zakładkę &bdquo;blog&rdquo; i mogę dodać swój post, podglądnąć, edytować, a jak mi się nie spodoba to usunąć, czyli CRUD od ang. create, read, update and delete (pol. utwórz, odczytaj, aktualizuj i usuń) - cztery podstawowe funkcje w aplikacjach korzystających z pamięci trwałej, które umożliwiają zarządzanie nią. Jednak do pełnosprawnego bloga sporo brakuje. Na razie skupiam się, żeby znaleźć pierwszą pracę poza stażem dla kursantów po kursie, ale mam w głowie plan na rozwój bloga na 2017 rok. Chciałbym dodać możliwość komentowania i ile osób skomentowało, dodawania obrazków do postu, wyświetlenie daty opublikowania oraz dla mnie najważniejsze, formatowanie tekstu. Na razie wszyskto jest wyświetlane jednym ciągiem, możliwość pogrubiania, czy przekierowanie tekstu do nowej linii muszę robić z poziomu HTML, chciałbym mieć opcję w panelu administracyjnym, że jak kliknę w daną ikonkę to tekst się pochyli. W ten sposób chcę doświadczyć jak rozbudować własny system CMS od zera. Dzięki temu będę miał większą świadomość jak działa Wordpress czy inne tego typu twory. Stąd proszę PHPowców o pomoc, jak ruszyć dalej.";
        $post->slug =  str_slug($post->title);
        $post->save();
        
        $post = new Post();
        $post->title = "Projekt - historia";
        $post->content = "Od stycznia postanowiłem wziąć udział w kursie weekendowym &bdquo;Od zera do WebDeva&rdquo; prowadzony przez Krzysztofa Stanio. &bdquo;Nowy rok, nowy język&rdquo; pomyślałem, stąd taka decyzja zdobywania umiejętności jako full-stack developer. Czego się nauczyłem na weekendzie utrwaliłem na darmowym stażu od poniedziałku do piątku w tej samej firmie, gdzie jest prowadzony kurs. Jak gdzieś utknąłem to bardziej doświadczeni programiści mi pomagali w rozwiązaniu danego problemu. Można powiedzieć, że mam za sobą trzymiesięczny darmowy staż. Cały stycznień uczyłem się nowego języka i jak działa programowanie po stronie serwera, w tym wypadku język PHP oraz bazy danych, w tym wypadku MySQL. Po zdobyciu odpowiednich umiejętności, mogłem w lutym zajęć nad rzeźbieniem panelu administracyjnego. To zajęło mi cały luty. Jak się loguję, to mam dostęp do zakładek &bdquo;moje projekty&rdquo;, &bdquo;gry i animacje&rdquo;, &bdquo;biblioteka&rdquo;, &bdquo;blog&rdquo;. Mogę z panelu dodawać własne nowe projekty i animacje, które zrobiłem, książki, które przeczytałem, animacje, dodawać posty oraz odczytywać wiadomości od klientów, którzy do mnie napiszą w formularzu. Na dodatek, żeby fajnie się pokazywało musiałem zrobić relację wielu-do-wielu z tagami, w tym wypadku technologiami webowymi, które użyłem w danym projekcie, dzięki temu nie muszę w HTML wklejać ikony svg z daną technologią i podpis. Generuje się samo, wystarczy zazanczyć na liście, którą technologię użyłem. To był najtrudniejszy moment w budowaniu własnej dynamicznej strony internetowej, bo budowałem fundamenty, a po stronie klienta nic nie widać. Pustka. Tym zająłem się w marcu 2017 roku. Front-endem. Responsywnością, czyli przystosowaniem strony na tablety i na telefony. Pomysł jak to ma wszystko wyglądać. Akurat mam zacięcie artystyczne i jeśli chodzi o design i fonty, to sam sobie ułożyłem w trakcie pisania strony. Jakich kolorów użyć, w której kategorii jakie zdjęcie ma wyświetlać, walidacja formularza w JavaScripcie, animacje, bawienie się grafiką wektorową w Illustratorze tworząc własne pliki svg, różne front-endowe szczególiki, w których się lubuję.";
        $post->slug =  str_slug($post->title);
        $post->save();
    }
}